/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package billance;

import billance.data.ContractView;
import billance.data.Tariff;
import billance.data.TariffSelectionView;
import billance.data.FlatView;
import billance.dataProvider.DataProviderManager;
import billance.dataProvider.IDataProvider;
import billance.remote.ContractImporter;
import billance.remote.ImporterWindow;
import billance.tools.EnergyBillanceCalculator;
import billance.tools.ToolsProvider;
import java.awt.Color;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Acer
 */
public class Billance extends javax.swing.JFrame
{

    /**
     * Creates new form Billance
     */
    public Billance()
    {
        initComponents();

        try
        {
            initDefaultValues();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "Unexpected exception\n" + e.getMessage(), "Title", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void initDefaultValues() throws ClassNotFoundException, SQLException, ParseException
    {
        IDataProvider provider = DataProviderManager.getDataProviderInstance();

        // load list of tarrifs
        tarifCmb.setModel(new DefaultComboBoxModel<>(provider.loadTarrifs(dateFormat)));
        tarifCmb.setSelectedIndex(-1);
        // load list of contracts
        contractCmb.setModel(new DefaultComboBoxModel<>(provider.loadContracts()));
        contractCmb.setSelectedIndex(-1);
        // load list of contracts
        flatCmb.setModel(new DefaultComboBoxModel<>(provider.loadFlats()));
        flatCmb.setSelectedIndex(-1);
        Date currentDate = Calendar.getInstance().getTime();
        documentText.setText((new SimpleDateFormat("yy000")).format(currentDate));
        Calendar yearBefore = Calendar.getInstance();
        yearBefore.add(Calendar.YEAR, -1);
        beginDate.setText(dateFormat.format(yearBefore.getTime()));
        endDate.setText(dateFormat.format(currentDate));
        issueDate.setText(dateFormat.format(currentDate));
        Calendar nextMonth = Calendar.getInstance();
        nextMonth.add(Calendar.MONTH, 1);
        dueDate.setText(dateFormat.format(nextMonth.getTime()));

        jScrollPane4.setVisible(false);
        jLabel12.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tarifCmb = new javax.swing.JComboBox<>();
        contractCmb = new javax.swing.JComboBox<>();
        eletricityChck = new javax.swing.JCheckBox();
        flatCmb = new javax.swing.JComboBox<>();
        documentText = new javax.swing.JTextField();
        beginDate = new javax.swing.JTextField();
        endDate = new javax.swing.JTextField();
        personText = new javax.swing.JTextField();
        issueDate = new javax.swing.JTextField();
        dueDate = new javax.swing.JTextField();
        continueButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        depositText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        exportBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        measuredServicesTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        heatconsumptionTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        summaryTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        volumeCoef = new javax.swing.JLabel();
        combustionHeat = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        gasCons = new javax.swing.JLabel();
        heatCons = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        flatCoef = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        consPart = new javax.swing.JLabel();
        commonHeatCons = new javax.swing.JLabel();
        heating = new javax.swing.JLabel();
        basicPart = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        totalCosts = new javax.swing.JLabel();
        depositField = new javax.swing.JLabel();
        balanceField = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        nearestBeginDate = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        nearestEndDate = new javax.swing.JLabel();
        mainMenu = new javax.swing.JMenuBar();
        billanceMenu = new javax.swing.JMenu();
        previewMenuItem = new javax.swing.JMenuItem();
        exportMenuItem = new javax.swing.JMenuItem();
        remoteMenu = new javax.swing.JMenu();
        importMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billance");

        jLabel1.setText("Tariff");

        jLabel2.setText("Contract");

        jLabel3.setText("Flat");

        jLabel4.setText("Document number");

        jLabel5.setText("Begin");

        jLabel6.setText("End");

        jLabel7.setText("Person");

        jLabel8.setText("Date of issue");

        jLabel9.setText("Due date");

        contractCmb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                contractCmbActionPerformed(evt);
            }
        });

        eletricityChck.setText("include electricity");

        documentText.setText("17000");

        beginDate.setText("dd.MM.yyyy");

        endDate.setText("dd.MM.yyyy");

        issueDate.setText("dd.MM.yyyy");

        dueDate.setText("dd.MM.yyyy");

        continueButton.setText("Preview");
        continueButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                continueButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("Deposit");

        depositText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        depositText.setText("0");
        depositText.setToolTipText("");

        jLabel16.setText("Kƒç");

        exportBtn.setText("Export");
        exportBtn.setEnabled(false);
        exportBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(continueButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(depositText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16))
                                    .addComponent(dueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(issueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(personText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(beginDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(documentText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(73, 73, 73)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tarifCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(contractCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eletricityChck)
                                    .addComponent(flatCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tarifCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contractCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eletricityChck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flatCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(documentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(beginDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(personText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(issueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(dueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(depositText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(continueButton)
                    .addComponent(exportBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setToolTipText("");
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 100));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 200));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Measured services");

        measuredServicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane2.setViewportView(measuredServicesTable);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Heat consumption");

        heatconsumptionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane3.setViewportView(heatconsumptionTable);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Summary");

        summaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane4.setViewportView(summaryTable);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("spaln√© teplo (kWh/m3):");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("objemov√Ω koeficient: ");

        volumeCoef.setText("0.000");

        combustionHeat.setText("0.000");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("spot≈ôeba nep≈ôepoƒçten√°: ");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("spot≈ôeba p≈ôepoƒçten√°: ");

        gasCons.setText("0,000 m3");

        heatCons.setText("0 kWh");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("bytov√Ω koeficient:");

        flatCoef.setText("0.000");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("hromadn√° spot≈ôeba: ");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("spot≈ôebn√≠ slo≈æka: ");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("z√°kladn√≠ slo≈æka");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("spot≈ôeba: ");

        consPart.setText("0 kWh");

        commonHeatCons.setText("0 kWh");

        heating.setText("0 kWh");

        basicPart.setText("0 kWh");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Total costs");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Deposit");

        jLabel22.setText("Unpaid balance (-)");

        jLabel27.setText("Overpayment (+)");

        totalCosts.setText("0,00");

        depositField.setText("0,00");

        balanceField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        balanceField.setText("+ 0,00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalCosts))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(depositField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(balanceField)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(totalCosts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(depositField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(balanceField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("odeƒçet poƒç√°teƒçn√≠ch hodnot");

        nearestBeginDate.setText("dd.MM.yyyy");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("odeƒçet koneƒçn√Ωch hodnot");

        nearestEndDate.setText("dd.MM.yyyy");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel21))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combustionHeat)
                                    .addComponent(volumeCoef)
                                    .addComponent(flatCoef))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(gasCons))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel23))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(commonHeatCons)
                                            .addComponent(heatCons))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel25))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(basicPart)
                                    .addComponent(heating)
                                    .addComponent(consPart)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nearestBeginDate)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nearestEndDate)))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(nearestBeginDate)
                    .addComponent(jLabel30)
                    .addComponent(nearestEndDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(combustionHeat)
                    .addComponent(jLabel17)
                    .addComponent(gasCons)
                    .addComponent(jLabel25)
                    .addComponent(basicPart))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(volumeCoef)
                    .addComponent(jLabel18)
                    .addComponent(heatCons)
                    .addComponent(jLabel24)
                    .addComponent(consPart))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(flatCoef)
                    .addComponent(jLabel23)
                    .addComponent(jLabel26)
                    .addComponent(commonHeatCons)
                    .addComponent(heating))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel2);

        billanceMenu.setText("Billance");

        previewMenuItem.setText("Preview");
        billanceMenu.add(previewMenuItem);

        exportMenuItem.setText("Export");
        exportMenuItem.setEnabled(false);
        billanceMenu.add(exportMenuItem);

        mainMenu.add(billanceMenu);

        remoteMenu.setText("Remote");

        importMenuItem.setText("Import Contracts");
        importMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                importMenuItemActionPerformed(evt);
            }
        });
        remoteMenu.add(importMenuItem);

        mainMenu.add(remoteMenu);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 172, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
        try
        {
            IDataProvider provider = DataProviderManager.getDataProviderInstance();
            // check values
            if (flatCmb.getSelectedItem() == null || tarifCmb.getSelectedItem() == null)
            {
                throw new ParseException("ComboBox", 0);
            }
            Date from = getDateValue(beginDate);
            Date to = getDateValue(endDate);
            int deposit = getIntValue(depositText);
            boolean isEletricity = eletricityChck.isSelected();
            FlatView flat = (FlatView) flatCmb.getSelectedItem();
            Tariff tariff = provider.getTariff(dateFormat.parse(tarifCmb.getSelectedItem().toString()));

            EnergyBillanceCalculator calculator = ToolsProvider.getTool(EnergyBillanceCalculator.class);
            EnergyBillance billance = calculator.calculateBillance(from, to, flat, tariff, isEletricity, deposit);
            displayEnergyBillance(billance);
            setEnergyBillance(billance);
        }
        catch (NumberFormatException | ParseException ex)
        {
            incorrectFields();
        }
    }//GEN-LAST:event_continueButtonActionPerformed

    private void incorrectFields() throws HeadlessException
    {
        JOptionPane.showMessageDialog(this, "Some fields has incorrect values. ", "Incorrect fields", JOptionPane.ERROR_MESSAGE);
    }

    private void displayEnergyBillance(EnergyBillance billance)
    {
        // Services table
        measuredServicesTable.setModel(billance.getExtendedServicesTableModel());
        TableColumnModel columns = measuredServicesTable.getColumnModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        columns.getColumn(1).setCellRenderer(centerRenderer);
        columns.getColumn(2).setCellRenderer(centerRenderer);
        columns.getColumn(3).setCellRenderer(centerRenderer);
        columns.getColumn(4).setCellRenderer(centerRenderer);

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        columns.getColumn(5).setCellRenderer(rightRenderer);
        columns.getColumn(6).setCellRenderer(rightRenderer);

        // Heating table
        heatconsumptionTable.setModel(billance.getHeatTableModel());
        //summaryTable.setModel(billance.getSummaryTableModel());
        DecimalFormat floatFormat = new DecimalFormat("0.000");
        DecimalFormat floatShortFormat = new DecimalFormat("#,##0.0");
        DecimalFormat currencyFormat = new DecimalFormat("#,##0.00 Kƒç");
        nearestBeginDate.setText(dateFormat.format(billance.nearestFrom));
        nearestEndDate.setText(dateFormat.format(billance.nearestTo));
        combustionHeat.setText(floatFormat.format(billance.getTariff().getCombustionHeat()));
        volumeCoef.setText(floatFormat.format(billance.getTariff().getVolumeCoeficient()));
        flatCoef.setText(floatFormat.format(billance.getFlat().getFlatCoef()));
        gasCons.setText(floatShortFormat.format(billance.getGasConsumption()) + " m3");
        heatCons.setText(floatShortFormat.format(billance.getMeasuredHeatConsumption()) + " kWh");
        commonHeatCons.setText(floatShortFormat.format(billance.getCommonHeat()) + " kWh");
        basicPart.setText(floatShortFormat.format(billance.getBasicHeatPart()) + " kWh");
        consPart.setText(floatShortFormat.format(billance.getConsumptionHeatPart()) + " kWh");
        heating.setText(floatShortFormat.format(billance.getHeatingEnergy()) + " kWh");
        totalCosts.setText(currencyFormat.format(billance.getTotalCosts()));
        depositField.setText(currencyFormat.format(billance.getDeposit()));
        balanceField.setText(((billance.isOverpaid() ? "+" : "")) + currencyFormat.format(billance.getBillance()));
    }

    private void contractCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contractCmbActionPerformed
        if (evt.getSource() != contractCmb || contractCmb.getSelectedItem() == null)
        {
            return;
        }
        loadValuesFromContract((ContractView) contractCmb.getSelectedItem());
    }//GEN-LAST:event_contractCmbActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        try
        {
            TexExport.DocumentPreambule preambule = new TexExport.DocumentPreambule(
                    documentText.getText(),
                    contractCmb.getSelectedItem().toString(),
                    personText.getText(),
                    getDateValue(issueDate), getDateValue(dueDate));
            BillanceExporter be = new TexExport(energyBillance, preambule);
            be.export();
        }
        catch (ParseException ex)
        {
            incorrectFields();
        }
    }//GEN-LAST:event_exportBtnActionPerformed

    private void importMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_importMenuItemActionPerformed
    {//GEN-HEADEREND:event_importMenuItemActionPerformed
        ContractView[] contracts = ImporterWindow.ShowImporter(this);
        if (contracts.length > 0)
        {
            contractCmb.setModel(new DefaultComboBoxModel<>(contracts));
            contractCmb.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_importMenuItemActionPerformed

    private void loadValuesFromContract(ContractView contract)
    {
        eletricityChck.setSelected(contract.eletricity);
        flatCmb.setSelectedIndex(-1);
        beginDate.setText(dateFormat.format(contract.activeFrom));
        endDate.setText(dateFormat.format(contract.activeTo));
        personText.setText(contract.names);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Billance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Billance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Billance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Billance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Locale.setDefault(new Locale("cs"));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Billance().setVisible(true);
            }

        });
    }

    private Date getDateValue(JTextField textField) throws ParseException
    {
        try
        {
            Date date = dateFormat.parse(textField.getText());
            correctComponent(textField);
            return date;
        }
        catch (ParseException ex)
        {
            incorrectComponent(textField);
            throw ex;
        }
    }

    private int getIntValue(JTextField textField) throws NumberFormatException
    {
        try
        {
            int number = Integer.decode(textField.getText());
            correctComponent(textField);
            return number;
        }
        catch (NumberFormatException ex)
        {
            incorrectComponent(textField);
            throw ex;
        }
    }

    private void correctComponent(Component component)
    {
        component.setBackground(Color.white);
    }

    private void incorrectComponent(Component component)
    {
        component.setBackground(Color.pink);
    }

    private void setEnergyBillance(EnergyBillance billance)
    {
        energyBillance = billance;
        exportBtn.setEnabled(true);
    }

    private DateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
    private EnergyBillance energyBillance = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balanceField;
    private javax.swing.JLabel basicPart;
    private javax.swing.JTextField beginDate;
    private javax.swing.JMenu billanceMenu;
    private javax.swing.JLabel combustionHeat;
    private javax.swing.JLabel commonHeatCons;
    private javax.swing.JLabel consPart;
    private javax.swing.JButton continueButton;
    private javax.swing.JComboBox<ContractView> contractCmb;
    private javax.swing.JLabel depositField;
    private javax.swing.JTextField depositText;
    private javax.swing.JTextField documentText;
    private javax.swing.JTextField dueDate;
    private javax.swing.JCheckBox eletricityChck;
    private javax.swing.JTextField endDate;
    private javax.swing.JButton exportBtn;
    private javax.swing.JMenuItem exportMenuItem;
    private javax.swing.JComboBox<FlatView> flatCmb;
    private javax.swing.JLabel flatCoef;
    private javax.swing.JLabel gasCons;
    private javax.swing.JLabel heatCons;
    private javax.swing.JTable heatconsumptionTable;
    private javax.swing.JLabel heating;
    private javax.swing.JMenuItem importMenuItem;
    private javax.swing.JTextField issueDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JTable measuredServicesTable;
    private javax.swing.JLabel nearestBeginDate;
    private javax.swing.JLabel nearestEndDate;
    private javax.swing.JTextField personText;
    private javax.swing.JMenuItem previewMenuItem;
    private javax.swing.JMenu remoteMenu;
    private javax.swing.JTable summaryTable;
    private javax.swing.JComboBox<TariffSelectionView> tarifCmb;
    private javax.swing.JLabel totalCosts;
    private javax.swing.JLabel volumeCoef;
    // End of variables declaration//GEN-END:variables

}
